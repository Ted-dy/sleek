package me.kansio.client.modules.impl.exploit.disabler.blocks;

import me.kansio.client.event.impl.PacketEvent;
import me.kansio.client.event.impl.UpdateEvent;
import me.kansio.client.modules.impl.exploit.disabler.DisablerMode;
import me.kansio.client.utils.chat.ChatUtil;
import me.kansio.client.utils.math.MathUtil;
import me.kansio.client.utils.math.Stopwatch;
import me.kansio.client.utils.network.PacketUtil;
import net.minecraft.init.Items;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

import java.util.LinkedList;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedDeque;

public class BlocksMC extends DisablerMode {

    public BlocksMC() {
        super("BlocksMC");
    }

    private final LinkedList<Packet> packets = new LinkedList<>();
    private boolean expectedTeleport;
    private final Stopwatch timer = new Stopwatch();

    @Override
    public void onEnable() {
        this.expectedTeleport = false;
        packets.clear();
        this.timer.resetTime();
    }

    @Override
    public void onPacket(PacketEvent event) {
        if (shouldNotRun()) {
            timer.resetTime();
            packets.clear();

            return;
        }

        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
            packets.add(event.getPacket());
            event.setCancelled(true);

            if (packets.size() > 300) {
                PacketUtil.sendPacketNoEvent(packets.poll());
            }
        }

        if (event.getPacket() instanceof C0BPacketEntityAction) {
            event.setCancelled(true);
        }

        if (event.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer c03PacketPlayer = event.getPacket();

            if (mc.thePlayer.ticksExisted % 5 == 0)
                PacketUtil.sendPacketNoEvent(new C0CPacketInput());

            if (mc.thePlayer.ticksExisted % 40 == 0) {
                this.expectedTeleport = true;

                c03PacketPlayer.y = -0.015625;
                c03PacketPlayer.onGround = false;
            }
        }

        if (event.getPacket() instanceof S08PacketPlayerPosLook && this.expectedTeleport) {
            S08PacketPlayerPosLook p = event.getPacket();
            this.expectedTeleport = false;

            event.setCancelled(true);

            PacketUtil.sendPacketNoEvent(new C03PacketPlayer
                    .C06PacketPlayerPosLook(p.getX(),
                    p.getY(),
                    p.getZ(),
                    p.getYaw(),
                    p.getPitch(), true));
        }
    }

    @Override
    public void onUpdate(UpdateEvent event) {
        if (timer.timeElapsed(490L)) {
            timer.resetTime();

            if (!packets.isEmpty()) {
                PacketUtil.sendPacketNoEvent(packets.poll());
            }
        }
    }

    boolean shouldNotRun() {
        if (getDisabler().autoDisable.getValue()) {

            //prevent possible npe
            if (mc.thePlayer == null) return true;
            if (mc.thePlayer.inventory == null) return true;

            if (mc.thePlayer.inventory.hasItem(Items.compass)) {
                // player only has compass in lobby's which have ncp, so it doesn't run yet
                return true;
            }
        }
        return mc.thePlayer == null || mc.thePlayer.ticksExisted <= 5;
    }

    boolean isLegitC0F(short action) {
        return action > 0 && action < 100;
    }
}
